# Generated by Django 3.2.6 on 2023-01-02 08:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import portaria.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CardFuncionario',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('empresa', models.CharField(max_length=30)),
                ('cargo', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255)),
                ('celular', models.CharField(max_length=11, validators=[portaria.models.only_int])),
                ('foto', models.ImageField(null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=100)),
                ('cnpj', models.CharField(max_length=14, validators=[portaria.models.only_int])),
                ('intex', models.CharField(choices=[('INTERNO', 'INTERNO'), ('CLIENTE', 'CLIENTE')], max_length=7)),
                ('saldo', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Demissoes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('empresa', models.IntegerField()),
                ('filial', models.IntegerField()),
                ('nome', models.CharField(max_length=50)),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[portaria.models.only_int])),
                ('dtadmissao', models.DateField()),
                ('dtdemissao', models.DateField(blank=True, null=True)),
                ('motivodemissao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailOcorenciasMonit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255)),
                ('rsocial', models.CharField(max_length=255)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EstoqueItens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('grupo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EtiquetasDocumento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('garagem', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('tp_doc', models.CharField(choices=[('8', 'NFS'), ('57', 'CTE')], max_length=3)),
                ('nr_doc', models.CharField(max_length=20)),
                ('nota', models.CharField(max_length=10)),
                ('volume', models.PositiveSmallIntegerField()),
                ('pub_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='FornecedorTerceirizados',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=200)),
                ('cnpj', models.CharField(max_length=14, validators=[portaria.models.only_int])),
                ('valor_p_funcionario', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FuncPj',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filial', models.CharField(blank=True, choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3, null=True)),
                ('nome', models.CharField(max_length=50)),
                ('salario', models.FloatField(blank=True, null=True)),
                ('adiantamento', models.FloatField(blank=True, null=True)),
                ('ajuda_custo', models.FloatField(blank=True, null=True)),
                ('cpf_cnpj', models.CharField(max_length=14, validators=[portaria.models.only_int])),
                ('tipo_contrato', models.CharField(choices=[('PF', 'PF'), ('PJ', 'PJ')], max_length=2)),
                ('banco', models.CharField(blank=True, max_length=50, null=True)),
                ('ag', models.IntegerField(blank=True, null=True)),
                ('conta', models.IntegerField(blank=True, null=True)),
                ('op', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('admissao', models.DateField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Funcpj',
                'verbose_name_plural': 'Funcpj',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=100)),
                ('validade', models.PositiveBigIntegerField()),
                ('estoque', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portaria.estoqueitens')),
            ],
        ),
        migrations.CreateModel(
            name='JustificativaEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa', models.CharField(max_length=5)),
                ('filial', models.CharField(max_length=5)),
                ('garagem', models.CharField(max_length=5)),
                ('id_garagem', models.CharField(max_length=5)),
                ('conhecimento', models.CharField(max_length=15)),
                ('data_emissao', models.DateField()),
                ('destinatario', models.CharField(max_length=200)),
                ('remetente', models.CharField(max_length=200)),
                ('peso', models.FloatField()),
                ('lead_time', models.DateField()),
                ('em_aberto', models.SmallIntegerField()),
                ('data_entrega', models.DateField(blank=True, null=True)),
                ('local_entreg', models.CharField(max_length=100)),
                ('nota_fiscal', models.CharField(max_length=200)),
                ('tipo_doc', models.CharField(max_length=5)),
                ('cod_just', models.CharField(blank=True, max_length=3, null=True)),
                ('desc_just', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(null=True, upload_to='justificativas/%Y/%m/%d')),
                ('confirmado', models.BooleanField(default=False)),
                ('recusa', models.BooleanField(default=False)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ManutencaoFrota',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('motorista', models.CharField(blank=True, max_length=50, null=True)),
                ('tp_manutencao', models.CharField(blank=True, choices=[('PREVENTIVA', 'PREVENTIVA'), ('CORRETIVA', 'CORRETIVA'), ('PRE', 'PRE')], max_length=10, null=True, verbose_name='Tipo manutenção')),
                ('local_manu', models.CharField(blank=True, choices=[('I', 'INTERNO'), ('E', 'EXTERNO')], max_length=1, null=True, verbose_name='Local manutenção')),
                ('dt_ult_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da última manutenção')),
                ('dt_entrada', models.DateField(blank=True, null=True)),
                ('dt_ini_manu', models.DateField(blank=True, null=True, verbose_name='Inicio Manutencao')),
                ('dt_saida', models.DateField(blank=True, null=True)),
                ('dias_veic_parado', models.CharField(blank=True, max_length=20, null=True)),
                ('km_atual', models.IntegerField(blank=True, null=True, verbose_name='Kilometragem atual')),
                ('filial', models.CharField(blank=True, choices=[('SPO', 'SPO'), ('VDC', 'VDC')], max_length=3, null=True)),
                ('socorro', models.BooleanField(default=False)),
                ('prev_entrega', models.DateField(blank=True, null=True)),
                ('observacao', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('ANDAMENTO', 'ANDAMENTO'), ('PENDENTE', 'PENDENTE'), ('CONCLUIDO', 'CONCLUIDO')], max_length=30, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ManutencaoFrota',
                'verbose_name_plural': 'ManutencaoFrota',
            },
        ),
        migrations.CreateModel(
            name='Motorista',
            fields=[
                ('codigomot', models.BigAutoField(primary_key=True, serialize=False)),
                ('filial', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('nome', models.CharField(max_length=100)),
                ('RG', models.CharField(max_length=20, validators=[portaria.models.only_int])),
                ('CPF', models.CharField(max_length=11, validators=[portaria.models.only_int])),
                ('telefone', models.CharField(max_length=11, validators=[portaria.models.only_int])),
                ('endereco', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=20)),
                ('UF', models.CharField(max_length=2)),
                ('cep', models.CharField(max_length=8, validators=[portaria.models.only_int])),
                ('data_nasc', models.DateField()),
            ],
            options={
                'verbose_name': 'Motorista',
                'verbose_name_plural': 'Motorista',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='PaleteControl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('loc_atual', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('tp_palete', models.CharField(choices=[('CHEP', 'CHEP'), ('PBR', 'PBR')], max_length=4)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PaleteControl',
                'verbose_name_plural': 'PaleteControl',
            },
        ),
        migrations.CreateModel(
            name='RetornoEtiqueta',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nota_fiscal', models.CharField(max_length=15, unique=True)),
                ('saida', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='RomXML',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dt_emissao', models.DateTimeField()),
                ('nota_fiscal', models.IntegerField()),
                ('remetente', models.CharField(max_length=200)),
                ('destinatario', models.CharField(max_length=200)),
                ('peso', models.FloatField()),
                ('volume', models.IntegerField()),
                ('vlr_nf', models.FloatField()),
                ('bairro', models.CharField(max_length=30)),
                ('cep', models.CharField(max_length=8)),
                ('municipio', models.CharField(max_length=100)),
                ('uf', models.CharField(max_length=2)),
                ('printed', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('xmlfile', models.FileField(upload_to='xmls/%Y/%m/%d')),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SolicitacoesCompras',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nr_solic', models.CharField(max_length=10)),
                ('data', models.DateField()),
                ('status', models.CharField(max_length=15)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('categoria', models.CharField(max_length=15)),
                ('solicitante', models.CharField(max_length=100)),
                ('email_solic', models.EmailField(blank=True, max_length=255, null=True)),
                ('departamento', models.CharField(blank=True, choices=[('DIRETORIA', 'DIRETORIA'), ('FATURAMENTO', 'FATURAMENTO'), ('FINANCEIRO', 'FINANCEIRO'), ('RH', 'RH'), ('FISCAL', 'FISCAL'), ('MONITORAMENTO', 'MONITORAMENTO'), ('OPERACIONAL', 'OPERACIONAL'), ('FROTA', 'FROTA'), ('EXPEDICAO', 'EXPEDICAO'), ('COMERCIAL', 'COMERCIAL'), ('JURIDICO', 'JURIDICO'), ('DESENVOLVIMENTO', 'DESENVOLVIMENTO'), ('TI', 'TI'), ('FILIAIS', 'FILIAIS'), ('COMPRAS', 'COMPRAS')], max_length=15, null=True)),
                ('prazo_conclusao', models.DateField(blank=True, null=True)),
                ('dt_vencimento', models.DateField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('obs', models.TextField(blank=True, null=True)),
                ('anexo', models.FileField(blank=True, null=True, upload_to='cpr/%Y/%m/%d')),
                ('pago', models.BooleanField(blank=True, default=False, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorcompras', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsavelcompras', to=settings.AUTH_USER_MODEL)),
                ('ultima_att', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ultimaattcompras', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sugestoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=150)),
                ('texto', models.TextField()),
                ('categoria', models.CharField(max_length=8)),
                ('file', models.FileField(blank=True, null=True, upload_to='sugestoes/%Y/%m/%d')),
                ('autor', models.CharField(default='anônimo', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='TipoServicosManut',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('grupo_servico', models.CharField(max_length=50, verbose_name='Grupo')),
                ('tipo_servico', models.CharField(max_length=50, verbose_name='Tipo Servico')),
            ],
        ),
        migrations.CreateModel(
            name='Veiculos',
            fields=[
                ('codigoveic', models.BigAutoField(primary_key=True, serialize=False)),
                ('codigotpveic', models.CharField(choices=[('1', 'CAMINHÃO TOCO 3/4'), ('2', 'CAMINHÃO TOCO'), ('3', 'CAMINHÃO 3/4'), ('4', 'CAMINHONETE/UTILITARIO'), ('5', 'CAMINHÃO TRUCK'), ('6', 'PASSEIO'), ('7', 'CAVALO'), ('8', 'CARRETA'), ('9', 'CAMINHÃO BI TRUCK '), ('10', 'CAVALO '), ('11', 'CAMINHAO LEVE'), ('12', 'SEMI ROBOQUE'), ('13', 'CAMINHÃO FURGÃO'), ('14', 'CAMINHÃO TRUCK '), ('15', 'CAMINHOTE'), ('16', 'CAMINHONETE/FURGAO')], max_length=5)),
                ('filial', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('prefixoveic', models.CharField(error_messages={'unique': 'Esta Placa já está cadastrada, gentileza verificar'}, max_length=7, unique=True)),
                ('kmatualveic', models.IntegerField()),
                ('obsveic', models.CharField(blank=True, max_length=30, null=True)),
                ('renavanveic', models.CharField(max_length=11, validators=[portaria.models.only_int])),
                ('modeloveic', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Veiculos',
                'verbose_name_plural': 'Veiculos',
            },
        ),
        migrations.CreateModel(
            name='TicketMonitoramento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome_tkt', models.CharField(error_messages={'unique': 'Já existe ticket criado para este CTE'}, max_length=150, unique=True)),
                ('dt_abertura', models.DateField()),
                ('remetente', models.CharField(max_length=100)),
                ('destinatario', models.CharField(max_length=100)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE')], max_length=3)),
                ('cte', models.CharField(max_length=100)),
                ('tp_docto', models.CharField(choices=[('8', 'NFS'), ('57', 'CTE')], max_length=3)),
                ('categoria', models.CharField(choices=[('Aguardando Recebimento', 'Aguardando Recebimento'), ('Dae', 'Dae'), ('Descarga', 'Descarga'), ('Devolução Parcial', 'Devolução Parcial'), ('Devolução Total', 'Devolução Total'), ('Diaria autorizada', 'Diaria autorizada'), ('Dif. Peso', 'Dif. Peso'), ('Entrega Realizada', 'Entrega Realizada'), ('Fora de Horário', 'Fora de Horário'), ('Fora de Rota', 'Fora de Rota'), ('Imprópria', 'Imprópria'), ('Merc. nao embar.', 'Merc. nao embar.'), ('Prorrogação de Boleto', 'Prorrogação de Boleto'), ('Reentrega', 'Reentrega'), ('Refaturamento', 'Refaturamento'), ('Reversa', 'Reversa'), ('Sem Agendamento', 'Sem Agendamento'), ('Sem Pedido', 'Sem Pedido'), ('Veículo em rota', 'Veículo em rota'), ('Veículo Quebrado', 'Veículo Quebrado')], max_length=100)),
                ('status', models.CharField(choices=[('ABERTO', 'ABERTO'), ('ANDAMENTO', 'ANDAMENTO'), ('CONCLUIDO', 'CONCLUIDO'), ('CANCELADO', 'CANCELADO')], max_length=9)),
                ('msg_id', models.CharField(max_length=100, unique=True)),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='responsavel', to=settings.AUTH_USER_MODEL)),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solicitante', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketChamado',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('solicitante', models.CharField(max_length=100)),
                ('servico', models.CharField(choices=[('DESCARGA', 'DESCARGA'), ('COMPROVANTE', 'COMPROVANTE'), ('PRAXIO', 'PRAXIO'), ('FISCAL', 'FISCAL'), ('MARKETING', 'MARKETING')], max_length=15)),
                ('nome_tkt', models.CharField(max_length=150)),
                ('dt_abertura', models.DateTimeField()),
                ('filial', models.CharField(blank=True, choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3, null=True)),
                ('departamento', models.CharField(blank=True, choices=[('DIRETORIA', 'DIRETORIA'), ('FATURAMENTO', 'FATURAMENTO'), ('FINANCEIRO', 'FINANCEIRO'), ('RH', 'RH'), ('FISCAL', 'FISCAL'), ('MONITORAMENTO', 'MONITORAMENTO'), ('OPERACIONAL', 'OPERACIONAL'), ('FROTA', 'FROTA'), ('EXPEDICAO', 'EXPEDICAO'), ('COMERCIAL', 'COMERCIAL'), ('JURIDICO', 'JURIDICO'), ('DESENVOLVIMENTO', 'DESENVOLVIMENTO'), ('TI', 'TI'), ('FILIAIS', 'FILIAIS'), ('COMPRAS', 'COMPRAS')], max_length=15, null=True)),
                ('status', models.CharField(choices=[('ABERTO', 'ABERTO'), ('ANDAMENTO', 'ANDAMENTO'), ('CONCLUIDO', 'CONCLUIDO'), ('CANCELADO', 'CANCELADO')], max_length=9)),
                ('categoria', models.CharField(blank=True, choices=[('FISCAL', (('CFOP', 'CFOP'), ('CANCELAR NFSe', 'CANCELAR NFSe'), ('CANCELAMENTO CTe', 'CANCELAMENTO CTe'), ('AVALIACAO CTe', 'AVALIACAO CTe')))], max_length=20, null=True)),
                ('msg_id', models.CharField(max_length=100, unique=True)),
                ('ultima_att', models.DateTimeField(blank=True, null=True)),
                ('ultimo_autor', models.CharField(blank=True, max_length=15, null=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tamanho',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tam', models.CharField(max_length=5)),
                ('quantidade', models.PositiveSmallIntegerField()),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portaria.item')),
            ],
        ),
        migrations.CreateModel(
            name='SolicMovPalete',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('solic_id', models.CharField(max_length=25)),
                ('data_solic', models.DateTimeField(default=django.utils.timezone.now)),
                ('origem', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('destino', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('placa_veic', models.CharField(max_length=7)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('palete', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='portaria.paletecontrol')),
            ],
        ),
        migrations.CreateModel(
            name='SolicitacoesEntradas',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('obs', models.TextField()),
                ('file1', models.FileField(blank=True, null=True, upload_to='cpr/%Y/%m/%d')),
                ('file2', models.FileField(blank=True, null=True, upload_to='cpr/%Y/%m/%d')),
                ('file3', models.FileField(blank=True, null=True, upload_to='cpr/%Y/%m/%d')),
                ('cpr_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.solicitacoescompras')),
                ('ultima_att', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SkuRefXML',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=30)),
                ('desc_prod', models.CharField(max_length=200)),
                ('tp_un', models.CharField(max_length=10)),
                ('qnt_un', models.IntegerField()),
                ('tp_vol', models.CharField(max_length=10)),
                ('qnt_vol', models.IntegerField()),
                ('xmlref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.romxml')),
            ],
        ),
        migrations.CreateModel(
            name='ServJoinManu',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('valor_maodeobra', models.FloatField(blank=True, null=True, verbose_name='Valor mão de obra')),
                ('valor_peca', models.FloatField(blank=True, null=True, verbose_name='Valor peça')),
                ('produto', models.CharField(blank=True, max_length=100, null=True)),
                ('fornecedor', models.CharField(blank=True, max_length=100, null=True)),
                ('local_manu', models.CharField(choices=[('I', 'INTERNO'), ('E', 'EXTERNO')], max_length=1, verbose_name='Local manutenção')),
                ('feito', models.BooleanField(null=True)),
                ('pub_date', models.DateField(auto_now=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('id_os', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.manutencaofrota')),
                ('id_svs', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.tiposervicosmanut')),
            ],
            options={
                'verbose_name': 'ServJoinManu',
                'verbose_name_plural': 'ServJoinManu',
            },
        ),
        migrations.CreateModel(
            name='RegistraTerceirizados',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('fornecedor', models.CharField(max_length=150)),
                ('nome_funcionario', models.CharField(max_length=100)),
                ('rg', models.CharField(max_length=15)),
                ('cpf', models.CharField(max_length=11, validators=[portaria.models.only_int])),
                ('data_entrada', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_saida', models.DateTimeField(blank=True, null=True)),
                ('foto', models.ImageField(null=True, upload_to='images/terceirizados/')),
                ('valor', models.FloatField()),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProdutosSolicitacoes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('produto', models.CharField(max_length=200)),
                ('qnt_itens', models.IntegerField()),
                ('solic_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.solicitacoescompras')),
            ],
        ),
        migrations.CreateModel(
            name='pj13',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('periodo_meses', models.IntegerField()),
                ('valor', models.FloatField(blank=True, null=True)),
                ('pgto_parc_1', models.DateField()),
                ('pgto_parc_2', models.DateField(blank=True, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.funcpj')),
            ],
        ),
        migrations.CreateModel(
            name='OcorrenciaEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa', models.CharField(max_length=5)),
                ('filial', models.CharField(max_length=5)),
                ('garagem', models.CharField(max_length=5)),
                ('conhecimento', models.CharField(max_length=15)),
                ('tp_doc', models.CharField(max_length=5)),
                ('cod_ocor', models.CharField(max_length=5)),
                ('desc_ocor', models.CharField(max_length=200)),
                ('data_ocorrencia', models.DateField()),
                ('entrega', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portaria.justificativaentrega')),
            ],
        ),
        migrations.CreateModel(
            name='NfServicoPj',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('faculdade', models.FloatField()),
                ('cred_convenio', models.FloatField()),
                ('aux_moradia', models.FloatField()),
                ('outros_cred', models.FloatField()),
                ('desc_convenio', models.FloatField()),
                ('outros_desc', models.FloatField()),
                ('data_pagamento', models.DateField()),
                ('data_emissao', models.DateField(default=django.utils.timezone.now)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.funcpj')),
            ],
            options={
                'verbose_name': 'NfServicoPj',
                'verbose_name_plural': 'NfServicoPj',
            },
        ),
        migrations.CreateModel(
            name='MovPalete',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('solic_id', models.CharField(max_length=25)),
                ('data_solic', models.DateTimeField()),
                ('data_receb', models.DateTimeField()),
                ('origem', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('destino', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=3)),
                ('placa_veic', models.CharField(max_length=7)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('palete', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='portaria.paletecontrol')),
            ],
        ),
        migrations.AddField(
            model_name='manutencaofrota',
            name='veiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.veiculos'),
        ),
        migrations.CreateModel(
            name='MailsPJ',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data_envio', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_pagamento', models.DateField()),
                ('mensagem', models.TextField()),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.funcpj')),
            ],
        ),
        migrations.CreateModel(
            name='feriaspj',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ultimas_ferias_ini', models.DateField()),
                ('ultimas_ferias_fim', models.DateField()),
                ('periodo', models.CharField(blank=True, max_length=2, null=True, validators=[portaria.models.only_int])),
                ('quitado', models.BooleanField(default=0)),
                ('vencimento', models.DateField()),
                ('tp_pgto', models.CharField(choices=[('INTEGRAL', 'INTEGRAL'), ('PARCIAL', 'PARCIAL')], max_length=8)),
                ('agendamento_ini', models.DateField(blank=True, null=True)),
                ('agendamento_fim', models.DateField(blank=True, null=True)),
                ('valor_integral', models.FloatField(blank=True, null=True)),
                ('valor_parcial1', models.FloatField(blank=True, null=True)),
                ('valor_parcial2', models.FloatField(blank=True, null=True)),
                ('dt_quitacao', models.DateField(blank=True, null=True)),
                ('alerta_venc_enviado', models.BooleanField(default=0)),
                ('funcionario', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='portaria.funcpj')),
            ],
        ),
        migrations.CreateModel(
            name='EtiquetasPalete',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cod_barras', models.CharField(max_length=20)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('cliente', models.CharField(max_length=200)),
                ('volumes', models.IntegerField()),
                ('nota_fiscal', models.CharField(blank=True, max_length=10, null=True)),
                ('localizacao', models.CharField(blank=True, max_length=20, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EstoqueSolicitacoes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('colab', models.CharField(max_length=120)),
                ('data_solic', models.DateField()),
                ('data_envio', models.DateField(blank=True, null=True)),
                ('confirmacao', models.DateField(blank=True, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('autor_confirmacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_autor_confirmacao', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailMonitoramento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assunto', models.CharField(max_length=150)),
                ('mensagem', models.TextField()),
                ('cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('dt_envio', models.DateTimeField()),
                ('email_id', models.CharField(max_length=100, unique=True)),
                ('ult_resp', models.TextField(blank=True, null=True)),
                ('ult_resp_dt', models.DateTimeField(blank=True, null=True)),
                ('ult_resp_html', models.TextField(blank=True, null=True)),
                ('tkt_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portaria.ticketmonitoramento')),
            ],
        ),
        migrations.CreateModel(
            name='EmailChamado',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assunto', models.CharField(max_length=100)),
                ('mensagem', models.TextField()),
                ('cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('dt_envio', models.DateTimeField(blank=True, null=True)),
                ('email_id', models.CharField(max_length=150, unique=True)),
                ('ult_resp', models.TextField(blank=True, null=True)),
                ('ult_resp_dt', models.DateTimeField(blank=True, null=True)),
                ('ult_resp_html', models.TextField(blank=True, null=True)),
                ('tkt_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.ticketchamado')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistFrota',
            fields=[
                ('idchecklist', models.BigAutoField(primary_key=True, serialize=False)),
                ('datachecklist', models.DateField(default=django.utils.timezone.now)),
                ('placacarreta', models.CharField(blank=True, max_length=7, null=True)),
                ('placacarreta2', models.CharField(blank=True, max_length=7, null=True)),
                ('kmanterior', models.IntegerField()),
                ('kmatual', models.IntegerField()),
                ('horimetro', models.CharField(max_length=10)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE')], max_length=2)),
                ('p1_1', models.BooleanField(verbose_name='Uniforme da Empresa')),
                ('p1_2', models.BooleanField(verbose_name='Motorista identificado por crachá')),
                ('p2_1', models.BooleanField(verbose_name='Lanterna do farol dianteiro funcionando?')),
                ('p2_2', models.BooleanField(verbose_name='Farol baixo funcionando?')),
                ('p2_3', models.BooleanField(verbose_name='Farol alto funcionando?')),
                ('p2_4', models.BooleanField(verbose_name='Lanterna direita funcionando?')),
                ('p2_5', models.BooleanField(verbose_name='Lanterna esquerda funcionando?')),
                ('p2_6', models.BooleanField(verbose_name='Lanternas traseiras funcionando?')),
                ('p2_7', models.BooleanField(verbose_name='Luz de ré funcionando?')),
                ('p2_8', models.BooleanField(verbose_name='Retrovisores estão em perfeito estado?')),
                ('p2_9', models.BooleanField(verbose_name='Água do radiador está no nível?')),
                ('p2_10', models.BooleanField(verbose_name='Óleo de freio está no nível?')),
                ('p2_11', models.BooleanField(verbose_name='Óleo de motor está no nível?')),
                ('p2_12', models.BooleanField(verbose_name='Bateria em boas condições?')),
                ('p2_13', models.BooleanField(verbose_name='Freio de emergência funcionando?')),
                ('p2_14', models.BooleanField(verbose_name='Alarme sonoro da ré funcionando?')),
                ('p2_15', models.BooleanField(verbose_name='Existe vazamentos de óleo de motor?')),
                ('p2_16', models.BooleanField(verbose_name='Existe vazamentos de ar?')),
                ('p2_17', models.BooleanField(verbose_name='Existe vazamento de óleo hidráulico?')),
                ('p2_18', models.BooleanField(verbose_name='Existe vazamento de água no radiador?')),
                ('p2_19', models.BooleanField(verbose_name='As mangueiras estão em boas condições?')),
                ('p2_20', models.BooleanField(verbose_name='Lonas de freio em boas condições?')),
                ('p2_21', models.BooleanField(verbose_name='Amortecedor em boas condições?')),
                ('p2_22', models.BooleanField(verbose_name='A suspensão está em boas condições?')),
                ('p2_23', models.BooleanField(verbose_name='O carro está limpo e higienizado?')),
                ('p2_24', models.BooleanField(verbose_name='Limpador de parabrisa funcionando?')),
                ('p2_25', models.BooleanField(verbose_name='Parabrisa em boas condições?')),
                ('p2_26', models.BooleanField(verbose_name='Ar condicionado funcionando?')),
                ('p2_27', models.BooleanField(verbose_name='Pintura do cavalo em boas condições?')),
                ('p2_28', models.BooleanField(verbose_name='Extintor em boas condições?')),
                ('p2_29', models.BooleanField(verbose_name='Pneus dianteiros em bom estado?')),
                ('p2_30', models.BooleanField(verbose_name='Pneus tração em bom estado?')),
                ('p2_31', models.BooleanField(verbose_name='Pneus traseiros em bom estado?')),
                ('p2_32', models.BooleanField(verbose_name='Lubrificação está em bom estado?')),
                ('p2_33', models.BooleanField(verbose_name='Alinhamento está em bom estado?')),
                ('p2_34', models.BooleanField(verbose_name='Balanceamento está em bom estado?')),
                ('obs_cavalo', models.TextField(blank=True, verbose_name='Obs Cavalo')),
                ('p3_1', models.BooleanField(verbose_name='Luzes de advertência das laterais funcionando?')),
                ('p3_2', models.BooleanField(verbose_name='Estepes em bom estado?')),
                ('p3_3', models.BooleanField(verbose_name='Thermoking está em boas condições?')),
                ('p3_4', models.BooleanField(verbose_name='Carroceria, assoalho e baú em boas condições?')),
                ('p3_5', models.BooleanField(verbose_name='Luz de freio funcionando?')),
                ('p3_6', models.BooleanField(verbose_name='Luz de ré funcionando?')),
                ('p3_7', models.BooleanField(verbose_name='Luzes da lanterna traseira direita funciona?')),
                ('p3_8', models.BooleanField(verbose_name='Luzes da lanterna traseira esquerda funciona?')),
                ('p3_9', models.BooleanField(verbose_name='Veículo plotado?')),
                ('p3_10', models.BooleanField(verbose_name='Plotagem em boas condições?')),
                ('p3_11', models.BooleanField(verbose_name='Amortecedores em boas condições?')),
                ('p3_12', models.BooleanField(verbose_name='A carreta está lavada?')),
                ('p3_13', models.BooleanField(verbose_name='Pneus dianteiros em bom estado?')),
                ('p3_14', models.BooleanField(verbose_name='Pneus tração em bom estado?')),
                ('p3_15', models.BooleanField(verbose_name='Pneus traseiros em bom estado?')),
                ('p3_16', models.BooleanField(verbose_name='Lubrificação em boas condições?')),
                ('p3_17', models.BooleanField(verbose_name='Alinhamento em boas condições?')),
                ('p3_18', models.BooleanField(verbose_name='Balanceamento em boas condições?')),
                ('p3_19', models.BooleanField(verbose_name='Carreta tem divisória?')),
                ('obs_carreta', models.TextField(blank=True, verbose_name='Obs Carreta')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('motoristaveic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.motorista')),
                ('placaveic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.veiculos')),
            ],
            options={
                'verbose_name': 'ChecklistFrota',
                'verbose_name_plural': 'ChecklistFrota',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tam_id', models.PositiveBigIntegerField()),
                ('desc', models.CharField(max_length=100)),
                ('tam', models.CharField(max_length=5)),
                ('qty', models.PositiveBigIntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.cart')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='solic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.estoquesolicitacoes'),
        ),
        migrations.CreateModel(
            name='Cadastro',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('placa', models.CharField(max_length=7)),
                ('placa2', models.CharField(blank=True, max_length=7)),
                ('motorista', models.CharField(max_length=50)),
                ('empresa', models.CharField(max_length=30)),
                ('origem', models.CharField(choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=5)),
                ('destino', models.CharField(blank=True, choices=[('SPO', 'SPO'), ('REC', 'REC'), ('SSA', 'SSA'), ('FOR', 'FOR'), ('MCZ', 'MCZ'), ('NAT', 'NAT'), ('JPA', 'JPA'), ('AJU', 'AJU'), ('VDC', 'VDC'), ('MG', 'MG'), ('CTG', 'CTG'), ('TCO', 'TCO'), ('UDI', 'UDI'), ('TMA', 'TMA'), ('VIX', 'VIX'), ('GVR', 'GVR')], max_length=5, null=True)),
                ('tipo_mot', models.CharField(choices=[('INTERNO', 'INTERNO'), ('AGREGADO', 'AGREGADO'), ('SEM_VINCULO', 'SEM_VINCULO')], max_length=11)),
                ('tipo_viagem', models.CharField(choices=[('COLETA', 'COLETA'), ('ENTREGA', 'ENTREGA'), ('TRANSF', 'TRANSF'), ('NENHUM', 'NENHUM')], max_length=10)),
                ('notas', models.IntegerField(blank=True, null=True)),
                ('kilometragem', models.IntegerField(blank=True, null=True)),
                ('hr_chegada', models.DateTimeField(blank=True)),
                ('hr_saida', models.DateTimeField(blank=True, null=True)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cadastro',
                'verbose_name_plural': 'Cadastro',
            },
        ),
        migrations.CreateModel(
            name='BipagemPalete',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filial', models.CharField(choices=[('1', 'SPO'), ('2', 'REC'), ('3', 'SSA'), ('4', 'FOR'), ('5', 'MCZ'), ('6', 'NAT'), ('7', 'JPA'), ('8', 'AJU'), ('9', 'VDC'), ('10', 'MG'), ('20', 'CTG'), ('21', 'TCO'), ('22', 'UDI'), ('23', 'TMA'), ('24', 'VIX'), ('25', 'GVR'), ('30', 'BMA'), ('31', 'BPE'), ('32', 'BEL'), ('33', 'BPB'), ('34', 'SLZ'), ('35', 'BAL'), ('36', 'THE'), ('40', 'FMA'), ('99', 'MOV')], max_length=3)),
                ('bip_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('cod_barras', models.CharField(max_length=20)),
                ('volume_conf', models.IntegerField(blank=True, null=True)),
                ('manifesto', models.IntegerField(blank=True, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('etq_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.etiquetaspalete')),
            ],
        ),
        migrations.CreateModel(
            name='BipagemEtiqueta',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cod_barras', models.CharField(max_length=20)),
                ('nota', models.CharField(max_length=10)),
                ('pub_date', models.DateField(default=django.utils.timezone.now)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doc_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portaria.etiquetasdocumento')),
            ],
        ),
    ]
